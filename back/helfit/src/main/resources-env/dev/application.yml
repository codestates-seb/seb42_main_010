running: dev
front:
  domain: http://localhost:3000

chat-gpt:
  secret-key: ${CHAT_GPT_SECRET_KEY}

cloud:
  aws:
    s3bucket: helfit.life/files
    access-key: ${AWS_ACCESS_KEY}
    secret-key: ${AWS_SECRET_KEY}
    stack:
      auto: false
    region:
      static: ap-northeast-2

spring:
  profiles:
    include: common
    active: dev
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
  datasource:
    url: ${datasource_url}
    username: ${datasource_username}
    password: ${datasource_password}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    database: mysql
    database-platform: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: update
    show-sql: true
    defer-datasource-initialization : true

#  mail:
#    host: smtp.gmail.com
#    port: 587
#    username: ${gmail_username}
#    password: ${gmail_password}
#    properties:
#      mail:
#        smtp:
#          starttls:
#            enable: true
#            required: true
#          auth: true
#          connectiontimeout: 5000
#          timeout: 5000
#          writetimeout: 5000

  security:
    oauth2:
      client:
        registration:
          google:
            clientId: ${GOOGLE_CLIENT_ID}
            clientSecret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - email
              - profile
          naver:
            clientId: ${NAVER_CLIENT_ID}
            clientSecret: ${NAVER_CLIENT_SECRET}
            clientAuthenticationMethod: post
            authorizationGrantType: authorization_code
            redirectUri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
            scope:
              - name
              - nickname
              - email
              - profile_image
            clientName: Naver
          kakao:
            clientId: ${KAKAO_CLIENT_ID}
            clientSecret: ${KAKAO_CLIENT_SECRET}
            clientAuthenticationMethod: post
            authorizationGrantType: authorization_code
            redirectUri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
            scope:
              - profile_nickname
              - profile_image
              - account_email
            clientName: Kakao
        provider:
          naver:
            authorizationUri: https://nid.naver.com/oauth2.0/authorize
            tokenUri: https://nid.naver.com/oauth2.0/token
            userInfoUri: https://openapi.naver.com/v1/nid/me
            userNameAttribute: response
          kakao:
            authorizationUri: https://kauth.kakao.com/oauth/authorize
            tokenUri: https://kauth.kakao.com/oauth/token
            userInfoUri: https://kapi.kakao.com/v2/user/me
            userNameAttribute: id

logging:
  level:
    org.hibernate.SQL: trace

# Cors
cors:
  allowed-origins: "*"
  allowed-headers: "*"
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  max-age: 3600

# Auth & OAuth
app:
  auth:
    tokenSecret: ${JWT_SECRET_KEY}
    tokenExpiry: 1800000
    refreshTokenExpiry: 604800000
  oauth2:
    authorizedRedirectUris:
      - http://localhost:3000/oauth2/receive

#  thymeleaf:
#    prefix: classpath:/mail-templates/
#    suffix: .html
#    mode: HTML
#    encoding: UTF-8
#    check-template-location: true

#mail:
#  address:
#    admin: ${admin_mail}
